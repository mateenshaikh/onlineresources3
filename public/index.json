[{"content":"Markdown here\n","description":"test post","id":0,"section":"notes","tags":null,"title":"May 2019","uri":"/notes/2019_may/"},{"content":"This theme is a little more involved, as my first extension. The recommendations on how to achieve things likely aren\u0026rsquo;t the most efficient all the time but hopefully they\u0026rsquo;ll get the job done.\nThe bar has a listed set of Depth X folders to show how to create nested elements in the menu. It\u0026rsquo;s fairly straightforward when you look in the /content menu. Each folder needs a _index.md (which can be created by some other means) in order to render a page.\n","description":"test post","id":1,"section":"docs","tags":null,"title":"Basic Usage","uri":"/docs/gettingstarted/basicusage/"},{"content":"This theme is a little more involved, as my first extension. The recommendations on how to achieve things likely aren\u0026rsquo;t the most efficient all the time but hopefully they\u0026rsquo;ll get the job done.\nThe bar has a listed set of Depth X folders to show how to create nested elements in the menu. It\u0026rsquo;s fairly straightforward when you look in the /content menu. Each folder needs a _index.md (which can be created by some other means) in order to render a page.\n","description":"test post","id":2,"section":"docs","tags":null,"title":"Basic Usage","uri":"/docs/themconfiguration/basicusage/"},{"content":"Markdown here\n","description":"test post","id":3,"section":"notes","tags":null,"title":"April 2019","uri":"/notes/2019_april/"},{"content":"Markdown here\n","description":"test post","id":4,"section":"notes","tags":null,"title":"March 2019","uri":"/notes/2019_march/"},{"content":"Markdown here\n","description":"test post","id":5,"section":"notes","tags":null,"title":"February 2019","uri":"/notes/2019_february/"},{"content":"To populate content quickly, you\u0026rsquo;ll have to look in /content folder and the appropriate subfolder. If you\u0026rsquo;re creating a new (sub)folder remember to create a new _index.md. If you have several pages in that folder they obviously won\u0026rsquo;t all be named this, but _index.md will be the page that loads when you click on the folder (from the crumbs), you don\u0026rsquo;t directly access it from the menu. If you copy other _index.md files it\u0026rsquo;ll just be a table of contents for the folder. It\u0026rsquo;s usually not accessed much.\nEach page should ultimately be written as a markdown file. Use all the usual markdown you\u0026rsquo;re used to, plus the additional info that\u0026rsquo;s available in this theme, outlined in Content Management.\n","description":"test post","id":6,"section":"docs","tags":null,"title":"Quick Start","uri":"/docs/gettingstarted/quickstart/"},{"content":"Most of the configuration is determined through files that are some flavour of markup language (TOML/YAML).\nThe file /content/config.yaml has some of the settings for the page. Besides things like the title, you\u0026rsquo;re not going to want to modify this since it\u0026rsquo;s all very normal, rather than personal choices. Some exceptions are things like depth of table of contents, you can choose how deep you want that to go.\nThe file /config/_default/languages.toml if you want to specify which languages to use if you turn the language menu back on. I have no intention of supporting anything but my only fluent language so I turned it off. See the original theme\u0026rsquo;s code for more info or search online for localization support for Hugo.\nThe file /config/_default/menus.en.toml outlines what\u0026rsquo;s at the top bar. If you want more, you can add to it just make sure you increment weight (location order) accordingly. url needs to match the folder name in /content/.\nThe file /config/_default/params.toml has all the fun stuff that turns on/off a lot of the features. Most of them are on by default so you can turn them off to simplify your page. It\u0026rsquo;s also where you create \u0026ldquo;logo text\u0026rdquo;, etc. Make sure you keep a clean copy of this if you tweak things and just want to reset everything.\nI\u0026rsquo;ve yet to figure it out but I think you can change the chroma syntax highlighting by fiddling with /themes/hugo-theme-zdocm/assets/sass/syntax/_syntax.scss and other nearby files in cousin folders.\n","description":"test post","id":7,"section":"docs","tags":null,"title":"TOML/YAML","uri":"/docs/themconfiguration/quickstart/"},{"content":"Markdown here\n","description":"test post","id":8,"section":"notes","tags":null,"title":"January 2019","uri":"/notes/2019_january/"},{"content":"newton method This documents the timings of a simple newton method in R, C (technically cpp but it\u0026rsquo;s all just C code), and julia.\nthe function used The function is \\(f_0(x)=e^x+\\sin(x)\\) so the newton update would be\n$$x\\leftarrow x-\\frac{f_0(x)}{f_1(x)}=x-\\frac{e^x+sin(x)}{e^x+cos(x)}$$\napplied repeatedly. A graph of the curve is shown below. It\u0026rsquo;s already fairly linear so the function will hit the root very quickly but that\u0026rsquo;s ok.\n1  curve(exp(x)+sin(x),-1,0)   the code We\u0026rsquo;ll run the code a fixed number of iterations. I don\u0026rsquo;t know if hitting 0 in the numerator does any short-cutting in any language but thats ok for now.\nNote that the julia code will be called within r (just like the rcpp is). For completeness the pure julia code is collapsed below.\n  rawjulia  the raw julia code The raw julia is shown below. These lines are actually run in julia but at the end we\u0026rsquo;ll call it from R, so the code will be revisted at the end.\n1  f0(x)=exp(x)+sin(x)   ## f0 (generic function with 1 method) 1  f1(x)=exp(x)+cos(x)   ## f1 (generic function with 1 method) 1  update(x)=x-f0(x)/f1(x)   ## update (generic function with 1 method) 1 2 3 4 5 6 7  function getroot_julia() x=0.0 for i in 1:50000 x=update(x) end return x end   ## getroot_julia (generic function with 1 method) 1 2 3 4  using BenchmarkTools timing_julia = @benchmark getroot_julia() samples=5 evals=5   ## BenchmarkTools.Trial: ## memory estimate: 0 bytes ## allocs estimate: 0 ## -------------- ## minimum time: 1.024 ms (0.00% GC) ## median time: 1.044 ms (0.00% GC) ## mean time: 1.042 ms (0.00% GC) ## maximum time: 1.053 ms (0.00% GC) ## -------------- ## samples: 5 ## evals/sample: 5 1  print(timing_julia)   ## Trial(1.024 ms)   \nr cpp julia  1 2 3 4 5 6 7 8 9  getroot_r=function(){ x=0.0 ee=0 for (i in 1:50000){ ee=exp(x) x=x-(ee+sin(x))/(ee+cos(x)) } return (x); }     1 2 3 4 5 6 7 8 9 10 11 12 13  #include \u0026lt;Rcpp.h\u0026gt;using namespace Rcpp; //[[Rcpp::export]] double getroot_cpp() { double x=0.0; double ee=0.0; for(int i=0;i\u0026lt;50000;i++){ ee=exp(x); x=x-(ee+sin(x))/(ee+cos(x)); } return (x); }     1 2  library(JuliaCall) julia_command(\u0026#34;f0(x)=exp(x)+sin(x)\u0026#34;)   ## Julia version 1.6.0 at location /opt/julia-1.6.0/bin will be used. ## Loading setup script for JuliaCall... ## Finish loading setup script for JuliaCall. ## f0 (generic function with 1 method) 1  julia_command(\u0026#34;f1(x)=exp(x)+cos(x)\u0026#34;)   ## f1 (generic function with 1 method) 1  julia_command(\u0026#34;update(x)=x-f0(x)/f1(x)\u0026#34;)   ## update (generic function with 1 method) 1 2 3 4 5 6 7  julia_command(\u0026#34;function getroot_julia() x=0.0 for i in 1:50000 x=update(x) end return x end\u0026#34;)   ## getroot_julia (generic function with 1 method)     'use strict'; var containerId = JSON.parse(\"\\\"b0c0efc8659d6423\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  results Now that all the functions are created and available, they\u0026rsquo;re assessed in R. Each runs the same number of iterations with the same initial guess. Each language\u0026rsquo;s implementation is run a few times times.\n1 2  library(microbenchmark) results = microbenchmark(getroot_r(),getroot_cpp(),julia_eval(\u0026#34;getroot_julia()\u0026#34;),times=5)    boxplot-base-r violinplot-ggplot2  1 2  languages = c(\u0026#34;R\u0026#34;,\u0026#34;cpp\u0026#34;,\u0026#34;julia\u0026#34;) boxplot(results,names=languages)    1 2 3 4 5  library(ggplot2) languages = c(\u0026#34;R\u0026#34;,\u0026#34;cpp\u0026#34;,\u0026#34;julia\u0026#34;) df=results df$expr=languages autoplot(df)      'use strict'; var containerId = JSON.parse(\"\\\"acb785b326a03109\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  1  print(results)   ## Unit: milliseconds ## expr min lq mean median uq ## getroot_r() 8.330237 8.337684 11.577239 8.376558 8.799783 ## getroot_cpp() 1.842256 1.867353 2.062791 1.895371 1.903420 ## julia_eval(\u0026quot;getroot_julia()\u0026quot;) 1.156166 1.185245 25.498659 1.327421 1.609942 ## max neval ## 24.041931 5 ## 2.805555 5 ## 122.214522 5 1 2 3 4 5  medians = summary(results)[,\u0026#34;median\u0026#34;] names(medians)=languages #speeds relative to r medians/max(medians)   ## R cpp julia ## 1.0000000 0.2262709 0.1584685 1 2  #speeds relative to julia medians/min(medians)   ## R cpp julia ## 6.31040 1.42786 1.00000 ","description":"","id":13,"section":"docs","tags":[],"title":"test julia thing","uri":"/docs/2021-06-18-test-julia-thing/"},{"content":"Technical Acknowledgements\n","description":"","id":14,"section":"acknowledgements","tags":[],"title":"Site","uri":"/acknowledgements/2021-06-22-site/"},{"content":"Territorial acknowledgements.\n","description":"","id":15,"section":"acknowledgements","tags":[],"title":"Territorial","uri":"/acknowledgements/2021-06-22-territorial/"},{"content":"Regular code The coolest thing (to me) about the original zdoc theme, is how the coding renders. A variety of common languages are included but not all of them. You can download more but it does bloat the site so only take the ones you think you\u0026rsquo;ll need to use. If you want to use (any) code and show it you\u0026rsquo;ll use the following template\n```language line of code 1 line of code 2 line of code 3 ```  if you specify a recognzied language, the appropriate syntax highlighting is used. For example\n```r signSquare = function(x){ return (sign(x) * x^2) } ```  will render as\n1 2 3  signSquare = function(x){ return (sign(x) * x^2) }   The original theme was clever in showing the language that\u0026rsquo;s used on the right side in a tab.\ncode tabs If, for some reason, you want to create in-page tabs to show code (for example, the same code but in different languages) you can use the tabs shortcut. A shortcode is something that neat about Hugo websites, that gives quite a bit of flexibility. The author of the original theme took care to write the tabs shortcode that works very well for code.\nFor example,\n{{ \u0026lt; tabs rcode juliacode \u0026gt;}} {{ \u0026lt;tab\u0026gt; }} ```r signSquare = function(x){ return (sign(x) * x^2) } ``` {{ \u0026lt;/tab\u0026gt; }} {{ \u0026lt;tab\u0026gt; }} ```r signSquare = function(x){ return (sign(x) * x^2) } {{ \u0026lt;/tab\u0026gt; }} {{ \u0026lt;tabs\u0026gt; }}  renders as\nrcode juliacode  1 2 3  signSquare = function(x){ return (sign(x) * x^2) }     1 2 3  function signSquare(x) sign(x) * x^2 end      If you're Rmarkdown environment, you'll want to make sure that you put braces around the language to execute the code (rather than just display it the way markdown does). Besides that, your approach is the same.   'use strict'; var containerId = JSON.parse(\"\\\"81fcc69a8ac1ca77\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }    'use strict'; var containerId = JSON.parse(\"\\\"07468c5253446b96\\\"\"); var containerElem = document.getElementById(containerId); var tabLinks = null; var tabContents = null; var ids = []; if (containerElem) { tabLinks = containerElem.querySelectorAll('.tab__link'); tabContents = containerElem.querySelectorAll('.tab__content'); } for (var i = 0; i 0) { tabContents[0].style.display = 'block'; }  ","description":"test post","id":16,"section":"docs","tags":null,"title":"Code","uri":"/docs/contentmanagement/coding/"},{"content":"Within a markdown document, if you wish to enter simple math, just use code as if you were writing LaTeX code, so you can directly write\n1  The equation `\\(y=\\alpha^2\\)` is a quadratic.   or\n1  The equation `$y=\\alpha^2$` is quadratic.   for inline equations and\n1  The equation \\[y=\\alpha^2\\] is quadratic.   or\n1  is quadratic. $$y=\\alpha^2$$ is quadratic.   for standalone environments. They will render as :\nThe equation $y=\\alpha^2$ is quadratic.\nfor inline or\nThe equation $$y=\\alpha^2$$ is quadratic.\nAs a quirk foyou probably noticed, inline markdown requires the code to be written in back ticks `$y=\\alpha^2$`. It works for standalone equation environments too, so you can use the backticks all the time. Alternatively, if you\u0026rsquo;re like me, and write a lot of the documents in Rmarkdown because you put coding in the document too, then you don\u0026rsquo;t need the backticks at all (but they will work).\nMore sophisticated things that require non-standard libraries will require a bit of work to get, so don\u0026rsquo;t go overboard. It is still HTML in the end, afterall. The good news is you can google what it is you want, if it\u0026rsquo;s common enough there\u0026rsquo;s likely a solution. The bad news is it may look ugly but only a copy-paste away.\n","description":"test post","id":17,"section":"docs","tags":null,"title":"Math","uri":"/docs/contentmanagement/math/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\n Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item  First Sub-item Second Sub-item    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","description":"","id":18,"section":"blog","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"/blog/markdown-syntax/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item  First Sub-item Second Sub-item    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":19,"section":"docs","tags":["markdown","css","html","themes"],"title":"Section","uri":"/docs/contentmanagement/sections/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\nHugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode   Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","description":"","id":20,"section":"blog","tags":["shortcodes","privacy"],"title":"Rich Content","uri":"/blog/rich-content/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\ninhospita parcite confusaque translucet patri vestro qui optatis\nlumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus\nsilentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria\ntractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra\ndicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere\nfurit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli\nLelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare\nEchionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert\nausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae\nvulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem\nPropoetides parte.\n","description":"","id":21,"section":"blog","tags":["markdown","text"],"title":"Placeholder Text","uri":"/blog/placeholder-text/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\nEmoji can be enabled in a Hugo project in a number of ways.\n The emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }  ","description":"","id":22,"section":"blog","tags":["emoji"],"title":"Emoji Support","uri":"/blog/emoji-support/"}]